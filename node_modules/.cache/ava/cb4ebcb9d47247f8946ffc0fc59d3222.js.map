{"version":3,"sources":["pictures-test.js"],"names":["t","image","getImage","srv","url","body","uri","publicId","json","deepEqual","todo"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,UAAL;AAAA,6CAAiB,WAAMA,CAAN,EAAW;AAAA;AAAA;;AAC1B,QAAIC,QAAQ,mBAASC,QAAT,EAAZ;AACA,QAAIC,MAAM,wCAAV;AACA,QAAIC,MAAM,MAAM,0BAAOD,GAAP,CAAhB;;AAEA,QAAIE,OAAO,MAAM,8BAAQ,EAAEC,KAAM,IAAEF,GAAI,MAAGH,MAAMM,QAAS,GAAhC,EAAmCC,MAAM,IAAzC,EAAR,CAAjB;AACAR,MAAES,SAAF,uBAAYJ,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkBJ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAPD;;AAAA;AAAA;AAAA;AAAA;;AASA,cAAKS,IAAL,CAAU,QAAV;AACA,cAAKA,IAAL,CAAU,gBAAV","file":"pictures-test.js","sourcesContent":["'use strict'\n\nimport test from 'ava'\nimport micro from 'micro'\nimport listen from 'test-listen'\nimport request from 'request-promise'\nimport pictures from '../pictures'\nimport fixtures from './fixtures'\n\ntest('GET /:id', async t => {\n  let image = fixtures.getImage()\n  let srv = micro(pictures)\n  let url = await listen(srv)\n\n  let body = await request({ uri: `${url}/${image.publicId}`, json: true })\n  t.deepEqual(body, image)\n})\n\ntest.todo('POST /')\ntest.todo('POST /:id/like')\n"]}